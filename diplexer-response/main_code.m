%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\hp\Documents\testing\final\filter1_s.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/09/22 18:17:59

%% Initialize variables.
filename = 'C:\Users\hp\Documents\testing\final\filter1_s.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
FreqGHz1 = dataArray{:, 1};
dBStgnd_T1gnd_T2 = dataArray{:, 2};
dBStgnd_T2gnd_T2 = dataArray{:, 3};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;

%% 2nd filter files

%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\hp\Documents\testing\final\12by12.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/09/22 18:16:58

%% Initialize variables.
filename = 'C:\Users\hp\Documents\testing\final\12by12.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
FreqGHz2 = dataArray{:, 1};
dBS1 = dataArray{:, 2};
dBS2 = dataArray{:, 3};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;

%% plots

plot(FreqGHz1,dBStgnd_T1gnd_T2);
hold on
plot(FreqGHz1,dBStgnd_T2gnd_T2);
hold on
plot(FreqGHz2,dBS1);
hold on
plot(FreqGHz2,dBS2);

xlabel('Frequency (GHz)');
ylabel('dB');
xlim([1 3.4]);
legend('S11 (Filter 1)','S21 (Filter 1)','S11 (Filter 2)','S21 (Filter 2)');